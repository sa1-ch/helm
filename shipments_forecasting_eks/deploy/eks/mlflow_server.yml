apiVersion: v1
kind: Service
metadata:
  name: mlflow-server
  labels:
    app: ts-app
spec:
  type: ClusterIP
  selector:
    app: ts-app
    tier: mlflow
  ports:
    - port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow-server
  labels:
    app: ts-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ts-app
      tier: mlflow
  template:
    metadata:
      labels:
        app: ts-app
        tier: mlflow
    spec:
      containers:
        - image: python:3.7-slim-buster
          name: mlflow-server
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh"]
          env:
            - name: rds_db_endpoint
              valueFrom:
                configMapKeyRef:
                  name: eks-deploy-config
                  key: rds_db_endpoint
            - name: mlflow_artifacts
              valueFrom:
                configMapKeyRef:
                  name: eks-deploy-config
                  key: mlflow_artifacts
            - name: password
              valueFrom:
                secretKeyRef:
                  name: mlflow-postgres-password
                  key: password
          args: ["-c", "pip install mlflow boto3 pymysql psycopg2-binary==2.8.3 && mlflow server --backend-store-uri postgresql://postgres:$(password)@$(rds_db_endpoint):5432/mlflow --default-artifact-root $(mlflow_artifacts) --host 0.0.0.0 -p 8080 -w 4"]
          resources:
             limits:
                cpu: 2000m
                memory: 5Gi
             requests:
                cpu: 2000m
                memory: 5Gi
          ports:
            - containerPort: 8080
              name: mlflow-server
      nodeSelector:
        nodegroup-name: app-demand
      serviceAccountName: s3-service-account
              